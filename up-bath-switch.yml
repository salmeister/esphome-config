substitutions:
  devicename: up-bath-switch
  shortname: "Up Bath"
  fullname: "Up Bath Switch"
  ipPrefix:  !secret ip_prefix
  id: "10"

packages:
  device_base: !include base.yaml
    
esp8266:
  board: esp01_1m
  restore_from_flash: true
      
# https://templates.blakadder.com/cloudfree_SWM1.html
# https://templates.blakadder.com/milfra_MFA05.html

# | GPIO   | Component |
# | ------ | --------- |
# | GPIO0  | button |
# | GPIO5  | motion |
# | GPIO12 | relay |
# | GPIO13 | blue led |
# | GPIO14 | light sensor |
# | GPIO16 | green led |

# GPIO16 boots HIGH which means the green led is ON.
# This is an issue because of the green led takes precendence over the blue led
# To deal with this, GPIO16 must be set LOW after boot which is done using the output component.
# This component defaults to OFF so the user DOES NOT need to use
#    (I) output.turn_off
#     or (II) digitalWrite(16, LOW) after boot

output:
  - platform: gpio # green LED
    id: green_led
    pin: GPIO16


light:
  - platform: status_led # blue LED
    id: blue_status
    name: ${fullname} Blue LED
    pin:
      number: GPIO13
      inverted: true
    effects:
      - strobe:
          name: Fast Flash
          colors:
            - state: true
              duration: 250ms
            - state: false
              duration: 250ms


binary_sensor:
  - platform: gpio # physical button
    id: relay_button
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    on_click:
      - switch.toggle: relay

  - platform: gpio # motion sensor
    id: motion
    name: ${fullname} Motion
    pin:
      number: GPIO5
      inverted: true
    device_class: motion
    filters:
      - delayed_off: 60s

switch:
  - platform: gpio # relay
    id: relay
    name: ${shortname}
    pin: GPIO12